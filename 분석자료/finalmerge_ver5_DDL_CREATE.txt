-- DROP TABLE
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE COMMON CASCADE CONSTRAINTS;
DROP TABLE CLIENT CASCADE CONSTRAINTS;
DROP TABLE CLIENT_HIS CASCADE CONSTRAINTS;
DROP TABLE CLIENT_PERFORM CASCADE CONSTRAINTS;
DROP TABLE DEPT CASCADE CONSTRAINTS;
DROP TABLE EMP CASCADE CONSTRAINTS;
DROP TABLE EMP_IMAGE CASCADE CONSTRAINTS;
DROP TABLE INVENTORY CASCADE CONSTRAINTS;
DROP TABLE INVENTORY_CLOSE CASCADE CONSTRAINTS;
DROP TABLE MONTH_INVENTORY CASCADE CONSTRAINTS;
DROP TABLE PARTS CASCADE CONSTRAINTS;
DROP TABLE PARTS_PRICE_HIS CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_BOM CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_PRICE_HIS CASCADE CONSTRAINTS;
DROP TABLE PURCHASE_ITEM CASCADE CONSTRAINTS;
DROP TABLE PURCHASE_ORDER CASCADE CONSTRAINTS;
DROP TABLE PURCHASE_PERFORM CASCADE CONSTRAINTS;
DROP TABLE SALES_ITEM CASCADE CONSTRAINTS;
DROP TABLE SALES_ORDER CASCADE CONSTRAINTS;
DROP TABLE SALES_PERFORM CASCADE CONSTRAINTS;


/* 제품 */
CREATE TABLE product (
	product_no NUMBER(7) NOT NULL, /* 제품번호 */
	product_status NUMBER(1), /* 분류번호 */
	product_name VARCHAR2(100), /* 제품명 */
	product_context VARCHAR2(1000), /* 제품내용 */
	filename VARCHAR2(1000), /* 사진 */
	del_status NUMBER(1), /* 삭제구분 */
	registrar NUMBER(7), /* 등록자 */
	in_date TIMESTAMP /* 등록일자 */
);

CREATE UNIQUE INDEX PK_product
	ON product (
		product_no ASC
	);

ALTER TABLE product
	ADD
		CONSTRAINT PK_product
		PRIMARY KEY (
			product_no
		);

COMMENT ON TABLE product IS '제품';

COMMENT ON COLUMN product.product_no IS '제품번호';

COMMENT ON COLUMN product.product_status IS '분류번호';

COMMENT ON COLUMN product.product_name IS '제품명';

COMMENT ON COLUMN product.product_context IS '제품내용';

COMMENT ON COLUMN product.filename IS '사진';

COMMENT ON COLUMN product.del_status IS '삭제구분';

COMMENT ON COLUMN product.registrar IS '등록자';

COMMENT ON COLUMN product.in_date IS '등록일자';

/* 제품_BOM */
CREATE TABLE product_BOM (
	product_no NUMBER(7) NOT NULL, /* 제품번호 */
	parts_no NUMBER(7) NOT NULL, /* 부품번호 */
	cnt NUMBER(10) /* 부품수량 */
);

CREATE UNIQUE INDEX PK_product_BOM
	ON product_BOM (
		product_no ASC,
		parts_no ASC
	);

ALTER TABLE product_BOM
	ADD
		CONSTRAINT PK_product_BOM
		PRIMARY KEY (
			product_no,
			parts_no
		);

COMMENT ON TABLE product_BOM IS '제품_BOM';

COMMENT ON COLUMN product_BOM.product_no IS '제품번호';

COMMENT ON COLUMN product_BOM.parts_no IS '부품번호';

COMMENT ON COLUMN product_BOM.cnt IS '부품수량';

/* 부품 */
CREATE TABLE parts (
	parts_no NUMBER(7) NOT NULL, /* 부품번호 */
	parts_status NUMBER(1), /* 분류번호 */
	parts_name VARCHAR2(100), /* 부품명 */
	parts_context VARCHAR2(1000), /* 부품내용 */
	relation_status NUMBER(1), /* 호환성여부 */
	manufacture VARCHAR2(100), /* 제조사 */
	parts_filename VARCHAR2(1000), /* 사진 */
	del_status NUMBER(1), /* 삭제구분 */
	registrar NUMBER(7), /* 등록자 */
	in_date DATE /* 등록일자 */
);

CREATE UNIQUE INDEX PK_parts
	ON parts (
		parts_no ASC
	);

ALTER TABLE parts
	ADD
		CONSTRAINT PK_parts
		PRIMARY KEY (
			parts_no
		);

COMMENT ON TABLE parts IS '부품';

COMMENT ON COLUMN parts.parts_no IS '부품번호';

COMMENT ON COLUMN parts.parts_status IS '분류번호';

COMMENT ON COLUMN parts.parts_name IS '부품명';

COMMENT ON COLUMN parts.parts_context IS '부품내용';

COMMENT ON COLUMN parts.relation_status IS '호환성여부';

COMMENT ON COLUMN parts.manufacture IS '제조사';

COMMENT ON COLUMN parts.parts_filename IS '사진';

COMMENT ON COLUMN parts.del_status IS '삭제구분';

COMMENT ON COLUMN parts.registrar IS '등록자';

COMMENT ON COLUMN parts.in_date IS '등록일자';

/* 재고 */
CREATE TABLE inventory (
	inventory_his_no NUMBER(7) NOT NULL, /* 재고변동이력번호 */
	item_status NUMBER(1) NOT NULL, /* 제품/부품 구분 */
	item_no NUMBER(7) NOT NULL, /* 제품/부품번호 */
	inout_status NUMBER(1) NOT NULL, /* 입/출고 구분 */
	inout_date DATE NOT NULL, /* 입/출고일시 */
	item_cnt NUMBER(10), /* 수량 */
	item_quality NUMBER(1) /* 품질 */
);

CREATE UNIQUE INDEX PK_inventory
	ON inventory (
		inventory_his_no ASC
	);

ALTER TABLE inventory
	ADD
		CONSTRAINT PK_inventory
		PRIMARY KEY (
			inventory_his_no
		);

COMMENT ON TABLE inventory IS '재고';

COMMENT ON COLUMN inventory.inventory_his_no IS '재고변동이력번호';

COMMENT ON COLUMN inventory.item_status IS '제품/부품 구분';

COMMENT ON COLUMN inventory.item_no IS '제품/부품번호';

COMMENT ON COLUMN inventory.inout_status IS '입/출고 구분';

COMMENT ON COLUMN inventory.inout_date IS '입/출고일시';

COMMENT ON COLUMN inventory.item_cnt IS '수량';

COMMENT ON COLUMN inventory.item_quality IS '품질';

/* 월 재고 */
CREATE TABLE month_inventory (
	yearmonth VARCHAR2(4) NOT NULL, /* 년월 */
	startend_status NUMBER(1) NOT NULL, /* 기초/기말 구분 */
	item_status NUMBER(1) NOT NULL, /* 제품/부품 구분 */
	item_no NUMBER(7) NOT NULL, /* 제품/부품번호 */
	cnt NUMBER(10), /* 수량 */
	in_date DATE /* 등록일자 */
);

CREATE UNIQUE INDEX PK_month_inventory
	ON month_inventory (
		yearmonth ASC,
		startend_status ASC,
		item_status ASC,
		item_no ASC
	);

ALTER TABLE month_inventory
	ADD
		CONSTRAINT PK_month_inventory
		PRIMARY KEY (
			yearmonth,
			startend_status,
			item_status,
			item_no
		);

COMMENT ON TABLE month_inventory IS '월 재고';

COMMENT ON COLUMN month_inventory.yearmonth IS '년월';

COMMENT ON COLUMN month_inventory.startend_status IS '기초/기말 구분';

COMMENT ON COLUMN month_inventory.item_status IS '제품/부품 구분';

COMMENT ON COLUMN month_inventory.item_no IS '제품/부품번호';

COMMENT ON COLUMN month_inventory.cnt IS '수량';

COMMENT ON COLUMN month_inventory.in_date IS '등록일자';

/* 제품가격변동이력 */
CREATE TABLE product_price_his (
	product_price_his_no NUMBER(7) NOT NULL, /* 제품가격변동이력 */
	product_no NUMBER(7) NOT NULL, /* 제품번호 */
	start_date DATE NOT NULL, /* 시작일자 */
	end_date DATE, /* 종료일자 */
	price NUMBER(19) /* 가격 */
);

CREATE UNIQUE INDEX PK_product_price_his
	ON product_price_his (
		product_price_his_no ASC
	);

ALTER TABLE product_price_his
	ADD
		CONSTRAINT PK_product_price_his
		PRIMARY KEY (
			product_price_his_no
		);

COMMENT ON TABLE product_price_his IS '제품가격변동이력';

COMMENT ON COLUMN product_price_his.product_price_his_no IS '제품가격변동이력';

COMMENT ON COLUMN product_price_his.product_no IS '제품번호';

COMMENT ON COLUMN product_price_his.start_date IS '시작일자';

COMMENT ON COLUMN product_price_his.end_date IS '종료일자';

COMMENT ON COLUMN product_price_his.price IS '가격';

/* 매출실적 */
CREATE TABLE sales_perform (
	yearmonth VARCHAR2(4) NOT NULL, /* 년월 */
	product_no NUMBER(7) NOT NULL, /* 제품번호 */
	cnt NUMBER(10), /* 수량 */
	total NUMBER(19) /* 총액 */
);

CREATE UNIQUE INDEX PK_sales_perform
	ON sales_perform (
		yearmonth ASC,
		product_no ASC
	);

ALTER TABLE sales_perform
	ADD
		CONSTRAINT PK_sales_perform
		PRIMARY KEY (
			yearmonth,
			product_no
		);

COMMENT ON TABLE sales_perform IS '매출실적';

COMMENT ON COLUMN sales_perform.yearmonth IS '년월';

COMMENT ON COLUMN sales_perform.product_no IS '제품번호';

COMMENT ON COLUMN sales_perform.cnt IS '수량';

COMMENT ON COLUMN sales_perform.total IS '총액';

/* 수주 */
CREATE TABLE SALES_ORDER (
	sales_no NUMBER(7) NOT NULL, /* 수주번호 */
	client_no NUMBER(7), /* 거래처번호 */
	sales_date DATE, /* 납기완료일 */
	out_status NUMBER(1), /* 출고상태 */
	emp_no NUMBER(7), /* 사원번호 */
	in_date DATE /* 등록일시 */
);

CREATE UNIQUE INDEX PK_SALES_ORDER
	ON SALES_ORDER (
		sales_no ASC
	);

ALTER TABLE SALES_ORDER
	ADD
		CONSTRAINT PK_SALES_ORDER
		PRIMARY KEY (
			sales_no
		);

COMMENT ON TABLE SALES_ORDER IS '수주';

COMMENT ON COLUMN SALES_ORDER.sales_no IS '수주번호';

COMMENT ON COLUMN SALES_ORDER.client_no IS '거래처번호';

COMMENT ON COLUMN SALES_ORDER.sales_date IS '납기완료일';

COMMENT ON COLUMN SALES_ORDER.out_status IS '출고상태';

COMMENT ON COLUMN SALES_ORDER.emp_no IS '사원번호';

COMMENT ON COLUMN SALES_ORDER.in_date IS '등록일시';

/* 발주 */
CREATE TABLE PURCHASE_ORDER (
	purchase_no NUMBER(7) NOT NULL, /* 발주번호 */
	client_no NUMBER(7), /* 거래처번호 */
	purchase_date DATE, /* 납기완료일 */
	in_status NUMBER(1), /* 입고상태 */
	emp_no NUMBER(7), /* 사원번호 */
	in_date DATE /* 등록일시 */
);

CREATE UNIQUE INDEX PK_PURCHASE_ORDER
	ON PURCHASE_ORDER (
		purchase_no ASC
	);

ALTER TABLE PURCHASE_ORDER
	ADD
		CONSTRAINT PK_PURCHASE_ORDER
		PRIMARY KEY (
			purchase_no
		);

COMMENT ON TABLE PURCHASE_ORDER IS '발주';

COMMENT ON COLUMN PURCHASE_ORDER.purchase_no IS '발주번호';

COMMENT ON COLUMN PURCHASE_ORDER.client_no IS '거래처번호';

COMMENT ON COLUMN PURCHASE_ORDER.purchase_date IS '납기완료일';

COMMENT ON COLUMN PURCHASE_ORDER.in_status IS '입고상태';

COMMENT ON COLUMN PURCHASE_ORDER.emp_no IS '사원번호';

COMMENT ON COLUMN PURCHASE_ORDER.in_date IS '등록일시';

/* 거래처 */
CREATE TABLE client (
	client_no NUMBER(7) NOT NULL, /* 거래처번호 */
	emp_no NUMBER(7), /* 사원번호 */
	client_name VARCHAR2(100), /* 거래처명 */
	client_gubun NUMBER(1), /* 거래처유형 */
	client_email VARCHAR2(100), /* 거래처이메일 */
	client_man VARCHAR2(100), /* 거래처담당자명 */
	client_address VARCHAR2(100), /* 거래처주소 */
	modify_date DATE, /* 수정일자 */
	in_date DATE /* 등록일자 */
);

CREATE UNIQUE INDEX PK_client
	ON client (
		client_no ASC
	);

ALTER TABLE client
	ADD
		CONSTRAINT PK_client
		PRIMARY KEY (
			client_no
		);

COMMENT ON TABLE client IS '거래처';

COMMENT ON COLUMN client.client_no IS '거래처번호';

COMMENT ON COLUMN client.emp_no IS '사원번호';

COMMENT ON COLUMN client.client_name IS '거래처명';

COMMENT ON COLUMN client.client_gubun IS '거래처유형';

COMMENT ON COLUMN client.client_email IS '거래처이메일';

COMMENT ON COLUMN client.client_man IS '거래처담당자명';

COMMENT ON COLUMN client.client_address IS '거래처주소';

COMMENT ON COLUMN client.modify_date IS '수정일자';

COMMENT ON COLUMN client.in_date IS '등록일자';

/* 수주 제품 */
CREATE TABLE SALES_ITEM (
	sales_no NUMBER(7) NOT NULL, /* 수주번호 */
	product_no NUMBER(7) NOT NULL, /* 제품번호 */
	sales_item_cnt NUMBER(10), /* 요청수량 */
	sales_item_outcnt NUMBER(10), /* 출고수량 */
	sales_item_cost NUMBER(10) /* 단가 */
);

CREATE UNIQUE INDEX PK_SALES_ITEM
	ON SALES_ITEM (
		sales_no ASC,
		product_no ASC
	);

ALTER TABLE SALES_ITEM
	ADD
		CONSTRAINT PK_SALES_ITEM
		PRIMARY KEY (
			sales_no,
			product_no
		);

COMMENT ON TABLE SALES_ITEM IS '수주 제품';

COMMENT ON COLUMN SALES_ITEM.sales_no IS '수주번호';

COMMENT ON COLUMN SALES_ITEM.product_no IS '제품번호';

COMMENT ON COLUMN SALES_ITEM.sales_item_cnt IS '요청수량';

COMMENT ON COLUMN SALES_ITEM.sales_item_outcnt IS '출고수량';

COMMENT ON COLUMN SALES_ITEM.sales_item_cost IS '단가';

/* 발주 부품 */
CREATE TABLE PURCHASE_ITEM (
	purchase_no NUMBER(7) NOT NULL, /* 발주번호 */
	parts_no NUMBER(7) NOT NULL, /* 부품번호 */
	purchase_item_cnt NUMBER(10), /* 요청수량 */
	purchase_item_incnt NUMBER(10), /* 입고수량 */
	purchase_item_cost NUMBER(10) /* 단가 */
);

CREATE UNIQUE INDEX PK_PURCHASE_ITEM
	ON PURCHASE_ITEM (
		purchase_no ASC,
		parts_no ASC
	);

ALTER TABLE PURCHASE_ITEM
	ADD
		CONSTRAINT PK_PURCHASE_ITEM
		PRIMARY KEY (
			purchase_no,
			parts_no
		);

COMMENT ON TABLE PURCHASE_ITEM IS '발주 부품';

COMMENT ON COLUMN PURCHASE_ITEM.purchase_no IS '발주번호';

COMMENT ON COLUMN PURCHASE_ITEM.parts_no IS '부품번호';

COMMENT ON COLUMN PURCHASE_ITEM.purchase_item_cnt IS '요청수량';

COMMENT ON COLUMN PURCHASE_ITEM.purchase_item_incnt IS '입고수량';

COMMENT ON COLUMN PURCHASE_ITEM.purchase_item_cost IS '단가';

/* 공통 */
CREATE TABLE common (
	big_status NUMBER(4) NOT NULL, /* 대분류 */
	middle_status NUMBER(4) NOT NULL, /* 중분류 */
	context VARCHAR2(100) /* 내용 */
);

CREATE UNIQUE INDEX PK_common
	ON common (
		big_status ASC,
		middle_status ASC
	);

ALTER TABLE common
	ADD
		CONSTRAINT PK_common
		PRIMARY KEY (
			big_status,
			middle_status
		);

COMMENT ON TABLE common IS '공통';

COMMENT ON COLUMN common.big_status IS '대분류';

COMMENT ON COLUMN common.middle_status IS '중분류';

COMMENT ON COLUMN common.context IS '내용';

/* 부품가격변동이력 */
CREATE TABLE parts_price_his (
	parts_price_his_no NUMBER(7) NOT NULL, /* 부품가격변동이력번호 */
	parts_no NUMBER(7) NOT NULL, /* 부품번호 */
	start_date DATE NOT NULL, /* 시작일자 */
	end_date DATE, /* 종료일자 */
	price NUMBER(19) /* 가격 */
);

CREATE UNIQUE INDEX PK_parts_price_his
	ON parts_price_his (
		parts_price_his_no ASC
	);

ALTER TABLE parts_price_his
	ADD
		CONSTRAINT PK_parts_price_his
		PRIMARY KEY (
			parts_price_his_no
		);

COMMENT ON TABLE parts_price_his IS '부품가격변동이력';

COMMENT ON COLUMN parts_price_his.parts_price_his_no IS '부품가격변동이력번호';

COMMENT ON COLUMN parts_price_his.parts_no IS '부품번호';

COMMENT ON COLUMN parts_price_his.start_date IS '시작일자';

COMMENT ON COLUMN parts_price_his.end_date IS '종료일자';

COMMENT ON COLUMN parts_price_his.price IS '가격';

/* 매입실적 */
CREATE TABLE purchase_perform (
	yearmonth VARCHAR2(4) NOT NULL, /* 년월 */
	parts_no NUMBER(7) NOT NULL, /* 부품번호 */
	cnt NUMBER(10), /* 수량 */
	total NUMBER(19) /* 총액 */
);

CREATE UNIQUE INDEX PK_purchase_perform
	ON purchase_perform (
		yearmonth ASC,
		parts_no ASC
	);

ALTER TABLE purchase_perform
	ADD
		CONSTRAINT PK_purchase_perform
		PRIMARY KEY (
			yearmonth,
			parts_no
		);

COMMENT ON TABLE purchase_perform IS '매입실적';

COMMENT ON COLUMN purchase_perform.yearmonth IS '년월';

COMMENT ON COLUMN purchase_perform.parts_no IS '부품번호';

COMMENT ON COLUMN purchase_perform.cnt IS '수량';

COMMENT ON COLUMN purchase_perform.total IS '총액';

/* 거래처별 실적 */
CREATE TABLE Client_perform (
	yearmonth VARCHAR2(4) NOT NULL, /* 년월 */
	client_no NUMBER(7) NOT NULL, /* 거래처번호 */
	cnt NUMBER(10), /* 건수 */
	total_amt NUMBER(19) /* 총액 */
);

CREATE UNIQUE INDEX PK_Client_perform
	ON Client_perform (
		yearmonth ASC,
		client_no ASC
	);

ALTER TABLE Client_perform
	ADD
		CONSTRAINT PK_Client_perform
		PRIMARY KEY (
			yearmonth,
			client_no
		);

COMMENT ON TABLE Client_perform IS '거래처별 실적';

COMMENT ON COLUMN Client_perform.yearmonth IS '년월';

COMMENT ON COLUMN Client_perform.client_no IS '거래처번호';

COMMENT ON COLUMN Client_perform.cnt IS '건수';

COMMENT ON COLUMN Client_perform.total_amt IS '총액';

/* 수불마감 */
CREATE TABLE inventory_close (
	yearmonth VARCHAR2(4) NOT NULL, /* 년월 */
	close_status NUMBER(1), /* 마감완료여부 */
	close_startdate DATE, /* 마감시작일시 */
	close_enddate DATE, /* 마감종료일시 */
	emp_no NUMBER(7) /* 마감처리담당자 */
);

CREATE UNIQUE INDEX PK_inventory_close
	ON inventory_close (
		yearmonth ASC
	);

ALTER TABLE inventory_close
	ADD
		CONSTRAINT PK_inventory_close
		PRIMARY KEY (
			yearmonth
		);

COMMENT ON TABLE inventory_close IS '수불마감';

COMMENT ON COLUMN inventory_close.yearmonth IS '년월';

COMMENT ON COLUMN inventory_close.close_status IS '마감완료여부';

COMMENT ON COLUMN inventory_close.close_startdate IS '마감시작일시';

COMMENT ON COLUMN inventory_close.close_enddate IS '마감종료일시';

COMMENT ON COLUMN inventory_close.emp_no IS '마감처리담당자';

/* 거래처 이력 */
CREATE TABLE client_HIS (
	client_no NUMBER(7) NOT NULL, /* 거래처번호 */
	start_date VARCHAR2(8) NOT NULL, /* 시작일자 */
	end_date VARCHAR2(8) NOT NULL, /* 종료일자 */
	emp_no NUMBER(7), /* 사원번호 */
	client_name VARCHAR2(100), /* 거래처명 */
	client_gubun NUMBER(1), /* 거래처유형 */
	client_email VARCHAR2(100), /* 거래처이메일 */
	client_address VARCHAR2(100), /* 거래처주소 */
	in_date DATE /* 등록일자 */
);

CREATE UNIQUE INDEX PK_client_HIS
	ON client_HIS (
		client_no ASC,
		start_date ASC
	);

ALTER TABLE client_HIS
	ADD
		CONSTRAINT PK_client_HIS
		PRIMARY KEY (
			client_no,
			start_date
		);

COMMENT ON TABLE client_HIS IS '거래처 이력';

COMMENT ON COLUMN client_HIS.client_no IS '거래처번호';

COMMENT ON COLUMN client_HIS.start_date IS '시작일자';

COMMENT ON COLUMN client_HIS.end_date IS '종료일자';

COMMENT ON COLUMN client_HIS.emp_no IS '사원번호';

COMMENT ON COLUMN client_HIS.client_name IS '거래처명';

COMMENT ON COLUMN client_HIS.client_gubun IS '거래처유형';

COMMENT ON COLUMN client_HIS.client_email IS '거래처이메일';

COMMENT ON COLUMN client_HIS.client_address IS '거래처주소';

COMMENT ON COLUMN client_HIS.in_date IS '등록일자';

/* 사원 */
CREATE TABLE emp (
	emp_no NUMBER(7) NOT NULL, /* 사원번호 */
	emp_name VARCHAR2(100), /* 사원명 */
	emp_tel VARCHAR2(13), /* 전화번호 */
	email VARCHAR2(50), /* e-Mail */
	sal NUMBER(10), /* 급여 */
	dept_code NUMBER(4), /* 부서번호 */
	username VARCHAR2(100), /* 사원아이디 */
	password VARCHAR2(1000), /* 사원비밀번호 */
	roles_status VARCHAR2(20), /* 권한구분 */
	del_status NUMBER(1), /* 삭제구분 */
	registrar NUMBER(7), /* 등록자 */
	in_date DATE /* 등록일자 */
);

CREATE UNIQUE INDEX PK_emp
	ON emp (
		emp_no ASC
	);

ALTER TABLE emp
	ADD
		CONSTRAINT PK_emp
		PRIMARY KEY (
			emp_no
		);

COMMENT ON TABLE emp IS '사원';

COMMENT ON COLUMN emp.emp_no IS '사원번호';

COMMENT ON COLUMN emp.emp_name IS '사원명';

COMMENT ON COLUMN emp.emp_tel IS '전화번호';

COMMENT ON COLUMN emp.email IS 'e-Mail';

COMMENT ON COLUMN emp.sal IS '급여';

COMMENT ON COLUMN emp.dept_code IS '부서번호';

COMMENT ON COLUMN emp.username IS '사원아이디';

COMMENT ON COLUMN emp.password IS '사원비밀번호';

COMMENT ON COLUMN emp.roles_status IS '권한구분';

COMMENT ON COLUMN emp.del_status IS '삭제구분';

COMMENT ON COLUMN emp.registrar IS '등록자';

COMMENT ON COLUMN emp.in_date IS '등록일자';

/* 게시판 */
CREATE TABLE board (
	board_no NUMBER(7) NOT NULL, /* 게시판번호 */
	emp_no NUMBER(7), /* 사원번호 */
	title VARCHAR2(100), /* 게시판제목 */
	content VARCHAR2(1000), /* 게시판내용 */
	read_count NUMBER(7), /* 조회수 */
	ref NUMBER(7), /* ref */
	re_lvl NUMBER(2), /* re_lvl */
	re_step NUMBER(7), /* re_step */
	in_date DATE /* 등록일시 */
);

CREATE UNIQUE INDEX PK_board
	ON board (
		board_no ASC
	);

ALTER TABLE board
	ADD
		CONSTRAINT PK_board
		PRIMARY KEY (
			board_no
		);

COMMENT ON TABLE board IS '게시판';

COMMENT ON COLUMN board.board_no IS '게시판번호';

COMMENT ON COLUMN board.emp_no IS '사원번호';

COMMENT ON COLUMN board.title IS '게시판제목';

COMMENT ON COLUMN board.content IS '게시판내용';

COMMENT ON COLUMN board.read_count IS '조회수';

COMMENT ON COLUMN board.ref IS 'ref';

COMMENT ON COLUMN board.re_lvl IS 're_lvl';

COMMENT ON COLUMN board.re_step IS 're_step';

COMMENT ON COLUMN board.in_date IS '등록일시';

/* 부서 */
CREATE TABLE dept (
	dept_code NUMBER(4) NOT NULL, /* 부서번호 */
	dept_name VARCHAR2(100), /* 부서명 */
	dept_captain NUMBER(7), /* 부서장 */
	parent_dept_code NUMBER(4), /* 상위부서코드 */
	dept_loc VARCHAR2(100), /* 위치 */
	del_status NUMBER(1), /* 삭제구분 */
	registrar NUMBER(7), /* 등록자 */
	in_date DATE /* 등록일자 */
);

CREATE UNIQUE INDEX PK_dept
	ON dept (
		dept_code ASC
	);

ALTER TABLE dept
	ADD
		CONSTRAINT PK_dept
		PRIMARY KEY (
			dept_code
		);

COMMENT ON TABLE dept IS '부서';

COMMENT ON COLUMN dept.dept_code IS '부서번호';

COMMENT ON COLUMN dept.dept_name IS '부서명';

COMMENT ON COLUMN dept.dept_captain IS '부서장';

COMMENT ON COLUMN dept.parent_dept_code IS '상위부서코드';

COMMENT ON COLUMN dept.dept_loc IS '위치';

COMMENT ON COLUMN dept.del_status IS '삭제구분';

COMMENT ON COLUMN dept.registrar IS '등록자';

COMMENT ON COLUMN dept.in_date IS '등록일자';

/* 사원 사진 */
CREATE TABLE emp_image (
	emp_no NUMBER(7) NOT NULL, /* 사원번호 */
	order_num NUMBER(1) NOT NULL, /* 사진번호 */
	emp_filename VARCHAR2(500) /* 사진 */
);

CREATE UNIQUE INDEX PK_emp_image
	ON emp_image (
		emp_no ASC,
		order_num ASC
	);

ALTER TABLE emp_image
	ADD
		CONSTRAINT PK_emp_image
		PRIMARY KEY (
			emp_no,
			order_num
		);

COMMENT ON TABLE emp_image IS '사원 사진';

COMMENT ON COLUMN emp_image.emp_no IS '사원번호';

COMMENT ON COLUMN emp_image.order_num IS '사진번호';

COMMENT ON COLUMN emp_image.emp_filename IS '사진';

ALTER TABLE product_BOM
	ADD
		CONSTRAINT FK_product_TO_product_BOM
		FOREIGN KEY (
			product_no
		)
		REFERENCES product (
			product_no
		);

ALTER TABLE product_BOM
	ADD
		CONSTRAINT FK_parts_TO_product_BOM
		FOREIGN KEY (
			parts_no
		)
		REFERENCES parts (
			parts_no
		);

ALTER TABLE SALES_ORDER
	ADD
		CONSTRAINT FK_client_TO_SALES_ORDER
		FOREIGN KEY (
			client_no
		)
		REFERENCES client (
			client_no
		);

ALTER TABLE PURCHASE_ORDER
	ADD
		CONSTRAINT FK_client_TO_PURCHASE_ORDER
		FOREIGN KEY (
			client_no
		)
		REFERENCES client (
			client_no
		);

ALTER TABLE SALES_ITEM
	ADD
		CONSTRAINT FK_SALES_ORDER_TO_SALES_ITEM
		FOREIGN KEY (
			sales_no
		)
		REFERENCES SALES_ORDER (
			sales_no
		);

ALTER TABLE SALES_ITEM
	ADD
		CONSTRAINT FK_product_TO_SALES_ITEM
		FOREIGN KEY (
			product_no
		)
		REFERENCES product (
			product_no
		);

ALTER TABLE PURCHASE_ITEM
	ADD
		CONSTRAINT FK_PRCHS_ORDER_TO_PRCHS_ITM
		FOREIGN KEY (
			purchase_no
		)
		REFERENCES PURCHASE_ORDER (
			purchase_no
		);

ALTER TABLE PURCHASE_ITEM
	ADD
		CONSTRAINT FK_parts_TO_PURCHASE_ITEM
		FOREIGN KEY (
			parts_no
		)
		REFERENCES parts (
			parts_no
		);

ALTER TABLE Client_perform
	ADD
		CONSTRAINT FK_client_TO_Client_perform
		FOREIGN KEY (
			client_no
		)
		REFERENCES client (
			client_no
		);

ALTER TABLE client_HIS
	ADD
		CONSTRAINT FK_client_TO_client_HIS
		FOREIGN KEY (
			client_no
		)
		REFERENCES client (
			client_no
		);

ALTER TABLE emp
	ADD
		CONSTRAINT FK_dept_TO_emp
		FOREIGN KEY (
			dept_code
		)
		REFERENCES dept (
			dept_code
		);

ALTER TABLE board
	ADD
		CONSTRAINT FK_emp_TO_board
		FOREIGN KEY (
			emp_no
		)
		REFERENCES emp (
			emp_no
		);

ALTER TABLE emp_image
	ADD
		CONSTRAINT FK_emp_TO_emp_image
		FOREIGN KEY (
			emp_no
		)
		REFERENCES emp (
			emp_no
		);

